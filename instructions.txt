Summary: Website Deployment and Configuration

1. Website Overview and Directory Structure

Flask Application:
  - Located in `/a/home/cc/enginer/gorengor/curiositymap/flask_curiosity_map`.
  - Contains the Flask app (`app.py`), static resources (`static/`), templates (`templates/`), and other related files.
  - Uses a virtual environment (`venv/`) for Python dependencies, ensuring isolation from other Python projects.

Gunicorn:
  - Serves the Flask application, acting as a WSGI server.
  - Managed as a systemd service (`/etc/systemd/system/flask-curiositymap-gunicorn.service`), allowing it to start automatically and be controlled easily.
  - Configured to listen on `0.0.0.0:3000`, making the Flask app accessible on this address and port.

Nginx:
  - Acts as a reverse proxy, forwarding requests from clients to the Gunicorn server.
  - Main configuration file located at `/etc/nginx/nginx.conf`.
  - Site-specific configurations stored in `/etc/nginx/sites-available` and symlinked to `/etc/nginx/sites-enabled` for activation.
  - The configuration for the website is in `sites-available/CuriosityMap_nginx.conf` (symlinked in `sites-enabled`), specifying how to handle incoming requests and proxy them to Gunicorn.

2. Configuration Files

Nginx Main Configuration (`nginx.conf`):
  - Located at `/etc/nginx/nginx.conf`.
  - Contains global settings for Nginx and includes the `sites-enabled` directory to load site-specific configurations.

Website Nginx Configuration (`CuriosityMap_nginx.conf`):
  - Located in `/etc/nginx/sites-available/CuriosityMap_nginx.conf` and symlinked to `/etc/nginx/sites-enabled`.
  - Configures Nginx to serve the Flask application on the domain `vrobotator.tau.ac.il`.
  - Includes settings for listening on ports 80 (HTTP) and 443 (HTTPS, if SSL is configured), proxying requests to `localhost:3000` (where Gunicorn serves the Flask app).

3. Flask Run Script (`run_flask.sh`)

Purpose: Simplifies the process of restarting the Flask application and Nginx after updates.
Commands:
  - `systemctl stop flask-curiositymap-gunicorn.service`: Stops the Gunicorn service.
  - `systemctl daemon-reload`: Reloads the systemd daemon to apply any changes to service files.
  - `systemctl start flask-curiositymap-gunicorn.service`: Starts the Gunicorn service, launching the Flask app.
  - `systemctl reload nginx`: Reloads Nginx to apply configuration changes.
  - `systemctl status nginx`: (Optional) Checks the status of Nginx for debugging.
  - `systemctl status flask-curiositymap-gunicorn.service`: (Optional) Checks the status of the Gunicorn service.

4. Additional Information

- Virtual Environment: The Flask app uses a Python virtual environment (`venv/`) for dependency management. It's crucial to activate this environment when performing tasks like installing new packages or running the Flask app directly (does not need to be activated every time, the gunicorn service file handles this).
- Gunicorn Systemd Service: This service file (`flask-curiositymap-gunicorn.service`) should be updated if there are changes to the Flask app's location, the virtual environment, or Gunicorn's configuration.
- Nginx Configuration: Changes to domain, SSL certificates, or proxy settings should be made in the `CuriosityMap_nginx.conf` file. After changes, Nginx should be reloaded.
- Maintenance and Updates: Regular updates to the Flask app, Gunicorn, Nginx, and system packages are recommended for security and performance.
- Logs: Check Nginx logs (`/var/log/nginx/error.log`) and Flask app logs (`flask_error.log` in the app directory) for troubleshooting.




